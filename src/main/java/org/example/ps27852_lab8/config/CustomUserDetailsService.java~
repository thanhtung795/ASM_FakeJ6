package org.example.ps27852_lab8.config;
import org.example.ps27852_lab8.entity.Account;
import org.example.ps27852_lab8.entity.CustomUserDetails;
import org.example.ps27852_lab8.repository.AccountRepository;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import java.util.Collections;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

@Service
public class CustomUserDetailsService implements UserDetailsService {

    private final AccountRepository accountRepository;

    public CustomUserDetailsService(AccountRepository accountRepository) {
        this.accountRepository = accountRepository;
    }
    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
        // Tìm Account từ repository
        Account account = accountRepository.findById(username)
                .orElseThrow(() -> new UsernameNotFoundException("User not found with username: " + username));

        // Lấy danh sách quyền (authorities)
        List<GrantedAuthority> authorities = account.getAuthorities().stream()
                .map(authority -> new SimpleGrantedAuthority(authority.getRole().getName()))
                .collect(Collectors.toList());

        // Trả về CustomUserDetails
        return new CustomUserDetails(
                account.getUsername(),
                account.getPassword(),
                authorities,
                account.getFullname()
        );
    }

}
